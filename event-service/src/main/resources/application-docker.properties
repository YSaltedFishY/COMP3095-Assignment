spring.application.name=event-service
event-service.version=v1.0

server.port=8084

#mongodb connection
spring.data.mongodb.host=mongodb
spring.data.mongodb.port=27017
spring.data.mongodb.database=event-service
spring.data.mongodb.username=admin
spring.data.mongodb.password=password
spring.data.mongodb.authentication-database=admin

booking.service.url=http://booking-service:8082
user.service.url=http://user-service:8083

springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/api-docs

#Kafka Consumer Properties (don't change)
#The address of the Kafka broker used to connect to the Kafka cluster
spring.kafka.bootstrap-servers=broker:29092
#The unique identifier for the consumer group to which this consumer belongs
spring.kafka.consumer.group-id=event-service
# The deserializer class used for deserializing the key of the messages from Kafka
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# The deserializer class used for deserializing the value of the messages from Kafka in JSON format.
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# Maps a custom event type to a specific class for deserialization of incoming JSON messages.
spring.kafka.consumer.properties.spring.json.type.mapping=event:ca.gbc.eventservice.event.BookingMadeEvent
# will ensure your consumer starts processing all unprocessed events from the beginning of the topic
spring.kafka.consumer.auto-offset-reset=earliest
#Kafka Consumer Properties (don't change)

spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=839ad39e12296d
spring.mail.password=42c4f4c49bd86e
