spring.application.name=booking-service
booking-service.version=v1.0


server.port=8082

#mongodb connection
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27019
spring.data.mongodb.database=booking-service
spring.data.mongodb.username=admin
spring.data.mongodb.password=password
spring.data.mongodb.authentication-database=admin

user.service.url=http://localhost:8083
room.service.url=http://localhost:8081

springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/api-docs

#Kafka Consumer Properties (don't change)
#The address of the Kafka broker used to connect to the Kafka cluster
spring.kafka.bootstrap-servers=localhost:9092
#The unique identifier for the consumer group to which this consumer belongs
spring.kafka.consumer.group-id=booking-service
# The deserializer class used for deserializing the key of the messages from Kafka
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# The deserializer class used for deserializing the value of the messages from Kafka in JSON format.
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# Maps a custom event type to a specific class for deserialization of incoming JSON messages.
spring.kafka.consumer.properties.spring.json.type.mapping=event:ca.gbc.bookingservice.event.UserInfoEvent
# will ensure your consumer starts processing all unprocessed events from the beginning of the topic
spring.kafka.consumer.auto-offset-reset=earliest
#Kafka Consumer Properties (don't change)

#Kafka properties producer
spring.kafka.template.default-topic=booking-made
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:ca.gbc.bookingservice.event.BookingMadeEvent
#Kafka properties producer

spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=839ad39e12296d
spring.mail.password=42c4f4c49bd86e

#Resilience4J
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


#Room CB
resilience4j.circuitbreaker.instances.room.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.room.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.room.slidingWindowType=count_based
resilience4j.circuitbreaker.instances.room.slidingWindowSize=10
resilience4j.circuitbreaker.instances.room.failureRateThreshold=50
resilience4j.circuitbreaker.instances.room.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.room.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.room.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.timelimiter.instances.room.timeout-duration=3s
resilience4j.circuitbreaker.instances.room.minimum-number-of-calls=5
resilience4j.retry.instances.room.max-attempts=3
resilience4j.retry.instances.room.wait-duration=2s


#User CB
resilience4j.circuitbreaker.instances.user.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.user.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.user.slidingWindowType=count_based
resilience4j.circuitbreaker.instances.user.slidingWindowSize=10
resilience4j.circuitbreaker.instances.user.failureRateThreshold=50
resilience4j.circuitbreaker.instances.user.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.user.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.user.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.timelimiter.instances.user.timeout-duration=3s
resilience4j.circuitbreaker.instances.user.minimum-number-of-calls=5
resilience4j.retry.instances.user.max-attempts=3
resilience4j.retry.instances.user.wait-duration=2s
