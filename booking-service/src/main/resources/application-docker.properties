spring.application.name=booking-service
booking-service.version=v1.0


server.port=8082

#mongodb connection
spring.data.mongodb.host=mongodb
spring.data.mongodb.port=27017
spring.data.mongodb.database=booking-service
spring.data.mongodb.username=admin
spring.data.mongodb.password=password
spring.data.mongodb.authentication-database=admin

user.service.url=http://user-service:8083
room.service.url=http://room-service:8081

springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/api-docs

#kafka properties - stores event as json, then deserialize to use again
spring.kafka.bootstrap-servers=broker:29092
spring.kafka.template.default-topic=booking-made
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#serializer class for serializing kafka
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#to orderplaced event-packageing file path
spring.kafka.producer.properties.spring.json.type.mapping=event:ca.gbc.orderservice
spring.kafka.producer.properties.schema.registry.url=http://127.0.0.1:8087


